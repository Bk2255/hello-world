/*
Implement a program for stack that performs following operation using array
(a) PUSH (b) POP (c) PEEK (d) CHANGE (e) DISPLAY
*/
#include<stdio.h>
#include<conio.h>
#define max 100

int scan(int a[])
{
 int i,top;

 printf("Enter the number of elements :");
 scanf("%d",&top);

 printf("\nEnter the %d Elements :\n",top);
 for(i=0;i<top;i++)
 {
 scanf("%d",&a[i]);
 }

 printf("\n\n");
 return (top-1);
}

int push(int a[],int top)
{
 int i,val;

 printf("Enter the element : ");
 scanf("%d",&val);

 if(top==(max-1))
 {
 printf("Stack is Overflow");
 }
 else
 {
 top++;
 a[top]=val;
 }

 return top;
}


int pop(int top)
{

 if(top==max-1)
 printf("Stack is Empty");
 else
 {
    top--;
 }
 return top;
}

void peek(int a[],int top)
{
 if(top==NULL)
 {
 printf("Stack is Empty");
 }
 else
 {
 printf("Last Element in the Stack : %d ",a[top]);
  }
}

void display(int a[],int top)
{
 int i;
 printf("Elements present in Stack after performing selected operation :\n");
 for(i=0;i<=top;i++)
 printf("%d\n",a[i]);

}
void main()
{
int a[max],t,c;
clrscr();

printf("Select operation to perform on stack :[\t1.PUSH\t2.POP\t3.PEEK\t4.CHANGE\t5.DISPLAY] : ");
scanf("%d",&c);

t=scan(a);

switch(c)
{
case 1:
printf("PUSH\n\n");
t=push(a,t);
display(a,t);
break;

case 2:
printf("POP\n\n");
t=pop(t);
display(a,t);
break;

case 3:
printf("PEEK\n\n");
peek(a,t);
break;

case 4:
printf("CHANGE\n\n");
t=pop(t);
t=push(a,t);
display(a,t);
break;

case 5:
printf("DISPLAY\n\n");
display(a,t);
break;

default :
printf("No operation has been performed on stack :");

}

getch();

}